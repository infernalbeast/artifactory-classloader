buildscript {
	if (project == rootProject) {
		def properties = new Properties()
		new File(rootProject.projectDir.parent, "gradle.properties").toURI().toURL().withInputStream {
			properties.load(it)
		}
		properties.each { key, value ->
			project.ext[key]=value
		}
	}
	def bom
	if (System.env.BOM) {
		bom = System.env.BOM
	} else {
		bom = "https://raw.githubusercontent.com/infernalbeast/bom/\${com.infernalbeast:bom}/"
	}
	project.ext["bom"] = bom.replaceAll("\\\$\\{com.infernalbeast:bom\\}", rootProject.ext["com.infernalbeast:bom"])
	apply from: project.ext["bom"] + "load.gradle", to: project
	apply from: project.ext["gradle-resources"] + "buildscript.gradle", to: {
		buildscript
	}
}

plugins {
	// Apply the java-library plugin to add support for Java Library
	id 'java-library'
}

apply from: rootProject.ext["gradle-resources"] + "build-pre.gradle"

java {
	modularity.inferModulePath = true
}

dependencies {
	compileOnly project(":artifactory-classloader-test-module-1")
}

compileJava {
	//dependsOn project(":artifactory-classloader-test-module-1").tasks.jar
	options.compilerArgs += [
		"--add-exports",
		"testmodule1/com.infernalbeast.testmodule1private=testmodule3"
	]
	options.compilerArgs += [
		"--add-reads",
		"testmodule3=testmodule1"
	]
	options.compilerArgs += [
		"--add-modules",
		"testmodule1"
	]
}

eclipse {
	classpath {
		plusConfigurations += [
			configurations.compileOnly
		]
		file {
			whenMerged { classpath ->
				def jre = classpath.entries.find {
					it.path.startsWith 'org.eclipse.jdt.launching.JRE_CONTAINER'
				}
				def attributes = jre.entryAttributes
				attributes["module"]="true"
				attributes["add-exports"]=[
					"testmodule1/com.infernalbeast.testmodule1private=testmodule3"
				].join(":")
				attributes["add-reads"]=[
					"testmodule3=testmodule1"
				].join(":")
			}
		}
	}
}

apply from: rootProject.ext["gradle-resources"] + "build-post.gradle"
